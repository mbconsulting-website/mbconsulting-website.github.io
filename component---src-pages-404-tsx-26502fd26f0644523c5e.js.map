{"version":3,"file":"component---src-pages-404-tsx-26502fd26f0644523c5e.js","mappings":"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","sources":["webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/button/dist/chunk-T6ZDZOLO.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/button/dist/chunk-3RENZ2UO.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/button/dist/chunk-QB2Y5VKH.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/button/dist/chunk-UVUR7MCU.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/button/dist/chunk-J37R6SZE.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/layout/dist/chunk-K7XRJ7NL.mjs","webpack://gatsby-starter-chakra-ui-type-script/./src/pages/404.tsx","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/layout/dist/chunk-2OOHT3W5.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/layout/dist/chunk-7OLJDQMT.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/layout/dist/chunk-PULVB27S.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs"],"sourcesContent":["'use client'\n\n// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n//# sourceMappingURL=chunk-T6ZDZOLO.mjs.map","'use client'\n\n// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n//# sourceMappingURL=chunk-3RENZ2UO.mjs.map","'use client'\n\n// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n//# sourceMappingURL=chunk-QB2Y5VKH.mjs.map","'use client'\n\n// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n//# sourceMappingURL=index.mjs.map","'use client'\nimport {\n  useButtonType\n} from \"./chunk-J37R6SZE.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-T6ZDZOLO.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-3RENZ2UO.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-QB2Y5VKH.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n//# sourceMappingURL=chunk-UVUR7MCU.mjs.map","'use client'\n\n// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n//# sourceMappingURL=chunk-J37R6SZE.mjs.map","'use client'\n\n// src/link.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Link = forwardRef(function Link2(props, ref) {\n  const styles = useStyleConfig(\"Link\", props);\n  const { className, isExternal, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.a,\n    {\n      target: isExternal ? \"_blank\" : void 0,\n      rel: isExternal ? \"noopener\" : void 0,\n      ref,\n      className: cx(\"chakra-link\", className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nLink.displayName = \"Link\";\n\nexport {\n  Link\n};\n//# sourceMappingURL=chunk-K7XRJ7NL.mjs.map","import * as React from \"react\";\nimport { Link, HeadFC, PageProps } from \"gatsby\";\nimport {\n  Box,\n  Code,\n  Heading,\n  Link as ChakraLink,\n  Text,\n  Button,\n} from \"@chakra-ui/react\";\n\nconst NotFoundPage: React.FC<PageProps> = () => {\n  return (\n    <Box p={24} fontFamily=\"-apple-system, Roboto, sans-serif, serif\">\n      <Heading as=\"h1\" mt={0} mb={16} maxW=\"container.sm\">\n        Page not found\n      </Heading>\n      <Text mb={12}>\n        Sorry 😔, we couldn’t find what you were looking for.\n        <br />\n        {process.env.NODE_ENV === \"development\" ? (\n          <>\n            <br />\n            Try creating a page in{\" \"}\n            <Code colorScheme=\"yellow\" p={1} fontSize=\"lg\" borderRadius=\"base\">\n              src/pages/\n            </Code>\n            .\n            <br />\n          </>\n        ) : null}\n        <br />\n        <Button>\n          <ChakraLink as={Link} to=\"/\">\n            Go home\n          </ChakraLink>\n        </Button>\n      </Text>\n    </Box>\n  );\n};\n\nexport default NotFoundPage;\n\nexport const Head: HeadFC = () => <title>Not found</title>;\n","'use client'\n\n// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n//# sourceMappingURL=chunk-2OOHT3W5.mjs.map","'use client'\n\n// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n//# sourceMappingURL=chunk-7OLJDQMT.mjs.map","'use client'\n\n// src/box.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const { size, centerContent = true, ...rest } = props;\n  const styles = centerContent ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" } : {};\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      boxSize: size,\n      __css: {\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0\n      },\n      ...rest\n    }\n  );\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const { size, ...rest } = props;\n  return /* @__PURE__ */ jsx(Square, { size, ref, borderRadius: \"9999px\", ...rest });\n});\nCircle.displayName = \"Circle\";\n\nexport {\n  Box,\n  Square,\n  Circle\n};\n//# sourceMappingURL=chunk-PULVB27S.mjs.map","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n"],"names":["ButtonGroupProvider","useButtonGroup","strict","name","ButtonIcon","props","children","className","rest","_children","isValidElement","cloneElement","focusable","_className","cx","jsx","span","display","alignSelf","flexShrink","displayName","ButtonSpinner","label","placement","spacing","color","width","height","__css","marginProp","spinnerStyles","useMemo","alignItems","position","fontSize","lineHeight","div","mergeRefs","refs","node","forEach","ref","value","current","error","Error","assignRef","useMergeRefs","Button","group","styles","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","iconSpacing","type","spinner","spinnerPlacement","as","buttonStyles","_focus","zIndex","appearance","justifyContent","userSelect","whiteSpace","verticalAlign","outline","_ref","defaultType","isButton","setIsButton","useState","useCallback","tagName","useButtonType","contentProps","jsxs","button","disabled","opacity","ButtonContent","Fragment","marginEnd","marginStart","Link","isExternal","a","target","rel","NotFoundPage","React","Box","p","fontFamily","Heading","mt","mb","maxW","Text","ChakraLink","to","Head","align","decoration","casing","aliasedProps","textAlign","textDecoration","textTransform","h2","Square","size","centerContent","boxSize","flexGrow","borderRadius","compact","object","clone","Object","assign","key"],"sourceRoot":""}